using System.Xml.Linq;
using System;
using System.Net.Sockets;
using System.Security.Cryptography;
using System.Runtime.ExceptionServices;
class Person
{
    string Name;
    string Surname;
    string Patronymic;
    string Address;
    long Phonenumber;
    long Creditcardnumber;
    long Bankaccountnumber;
    public Person(string N, string S, string P, long Ph, string A, long Cn, long Bn)
    {
        Name = N;
        Surname = S;
        Patronymic = P;
        Phonenumber = Ph;
        Address = A;
        Creditcardnumber = Cn;
        Bankaccountnumber = Bn;
    }
    public string getName()
    {
        return Name;
    }
    public string getSurname()
    {
        return Surname;
    }
    public long getCreditcardnumber()
    {
        return Creditcardnumber;
    }
    public long getPhonenumber()
    {
        return Phonenumber;
    }
    public long getBankaccountnumber()
    {
        return Bankaccountnumber;
    }
    public string getAddress()
    {
        return Address;
    }
    public string info()
    {
        return String.Format("{0} {1} {2} \nНомер кредитной карты:{3}\nНомер банковского счета:{4} \nНомер телефона:{5} \nГород проживания:{6} ",
        Name, Patronymic, Surname, Creditcardnumber, Bankaccountnumber, Phonenumber, Address);
    }
}
class Program
{
    static void Main()
    {
        int n = 4;
        int i = 0;
        bool none = true;
        Person[] MassPerson = new Person[n];
        MassPerson[0] = new Person("Vlad", "Bobkov", "Dmitrievich", 89999999999, "SpB", 1234567890, 223456);
        MassPerson[1] = new Person("Ivan", "Ivanov", "Ivanovich", 88888888888, "Ufa", 1234567890, 223456);
        MassPerson[2] = new Person("Vadim", "Dergachev", "Vadimovich", 87777777777, "Moscow", 1234567890, 223456);
        MassPerson[3] = new Person("Vadim", "Baranov", "Nikolaevich", 8666666666, "Ural", 1234567890, 223456);
        Console.WriteLine("Напишите Имя человека");
        string Name = Console.ReadLine();
        Console.WriteLine("Напишите Фамилию человека для отображения информации");
        string Surname = Console.ReadLine();
        for (i = 0; i < n; i++)
        {
            if (MassPerson[i].getName() == Name)
            {
                if (MassPerson[i].getSurname() == Surname)
                {
                    none = false;
                    Console.WriteLine("Напишите, что именно вы хотите узнать\nСписок команд:\n1. Номер кредитной карты\n2. Город проживания\n3. Номер банковского счета\n4. Номер телефона\n5. Вся информация");
                    string Commands1 = Console.ReadLine();
                    switch (Commands1)
                    {
                        case "1":
                            Console.WriteLine(MassPerson[i].getCreditcardnumber());
                            break;
                        case "2":
                            Console.WriteLine(MassPerson[i].getAddress());
                            break;
                        case "3":
                            Console.WriteLine(MassPerson[i].getBankaccountnumber());
                            break;
                        case "4":
                            Console.WriteLine(MassPerson[i].getPhonenumber());
                            break;
                        case "5":
                            Console.WriteLine(MassPerson[i].info());
                            break;
                        default: break;
                    }
                }
            }
        }
        if (none) 
        {
        Console.WriteLine("В базе нет такого человека"); 
        }
        i = 0;
    }
}
